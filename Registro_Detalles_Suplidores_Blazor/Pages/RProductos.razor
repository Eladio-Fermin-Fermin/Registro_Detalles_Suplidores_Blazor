@page "/Productos"

@page "/Productos/{ProductoId:int}"

@inject IToastService toast

<div class="shadow-lg p-3 mb-5 bg-white rounded">

    <EditForm Model="productos" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card">
            <div class="card-header">
                <h3>Registro de Productos</h3>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>Persona Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="this.ProductoId" class="form-control" />
                                    <div class="input-group-append">
                                        <button type="button" style="z-index:0" class="btn btn-secondary input-group-text" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Descripción</label>
                        <InputText @bind-Value="productos.Descripcion" class="form-control" />
                        <ValidationMessage For="(() => productos.Descripcion)" />
                    </div>
                    <div class="form-group">
                        <label>Costo</label>
                        <InputNumber @bind-Value="productos.Costo" class="form-control" />
                        <ValidationMessage For="(() => productos.Costo)" />
                    </div>
                    <div class="form-group">
                        <label>Inventario</label>
                        <InputNumber @bind-Value="productos.Inventario" readonly class="form-control" />
                        <ValidationMessage For="(() => productos.Inventario)" />
                    </div>
                </form>

            </div>

            <div class="card-footer">
                <div class="form-group text-center">
                    <button type="button" class="btn btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

        </div>
    </EditForm>

</div>


@code {
    [Inject]
    private ProductosBLL productosBLL { get; set; }

    [Parameter]
    public int ProductoId { get; set; }

    private Productos productos = new Productos();
    protected override void OnInitialized()
    {
        Limpiar();
    }

    public async void Buscar()
    {

        var registro = await productosBLL.Buscar(this.ProductoId);

        if (registro != null)
        {
            this.productos = registro;
        }
        else
        {

            toast.ShowInfo("Registro no encontrado.");
        }
    }

    private void Nuevo()
    {
        Limpiar();
    }

    private async void Guardar()
    {
        productos.ProductoId = this.ProductoId;
        if (await productosBLL.Guardar(productos))
        {
            toast.ShowSuccess("Guardado");
            Limpiar();
        }
        else
        {
            toast.ShowError("Error al guardar el registro.");
        }
    }

    private async void Eliminar()
    {
        if (await productosBLL.Eliminar(this.ProductoId))
        {
            toast.ShowSuccess("Eliminado");
            Limpiar();
        }
        else
        {
            toast.ShowError("No se pudo eliminar el registro.");
        }
    }

    private void Limpiar()
    {
        this.productos = new Productos();
        this.ProductoId = 0;
    }
}